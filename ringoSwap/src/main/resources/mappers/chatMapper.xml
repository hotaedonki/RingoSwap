<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.ringo.ringoSwap.dao.ChatDAO">
	<!-- 오픈 채팅방 만들기 -->
	<insert id="createOpenChatroom" parameterType="Chatroom">
		insert into ringo_chatroom
			(
				chatroom_num
				, host_num
				, title
				, lang_category
				, gen_category
				, capacity
			)
			values
			(
				ringo_chatroom_seq.nextval
				, #{host_num}
				, #{title}
				, #{lang_category}
				, 'voice'
				, #{capacity}
			)
	</insert>
	
	<!-- 자신이 참가한 채팅방을 DB에 기록 -->
	<insert id="createChatroomLink" parameterType="ChatroomLink">
		insert into ringo_chatroom_link
			(
				user_num
				, chatroom_num
			)
			values
			(
				#{user_num}
				, #{chatroom_num}
			)
	</insert>
	
	<!-- 메시지를 보낼 경우 DB(ChatCommon 형태)에 기록 -->
	<insert id="insertChatCommon" parameterType="ChatCommon">
		insert into ringo_chat_common
			(
				chat_num
				, user_num
				, chatroom_num
				, message
				, origin_file
				, saved_file
			)
			values
			(
				ringo_chat_common_seq.nextval
				, #{user_num}
				, #{chatroom_num}
				, #{message}
				, #{origin_file}
				, #{saved_file}
			)

	</insert>
	
	<!-- 메시지들을 DB에서 삭제함 -->
    <delete id="deleteMessage" parameterType="ChatCommon">
    	delete 
    		ringo_chat_common
		
		where
			chat_num in 
			<foreach collection="list" item="chat_num" open="(" separator="," close=")">
				#{chat_num}
			</foreach>
			
			user_num in 
			<foreach collection="list" item="user_num" open="(" separator="," close=")">
				#{user_num}
			</foreach>
			
			chatroom_num in
			<foreach collection="list" item="chatroom_num" open="(" separator="," close=")">
				#{chatroom_num}
			</foreach>
    </delete>

	<!-- 채팅방 링크 가져오기 -->
	<select id="getChatroomNums" parameterType="int" resultType="int">
		select
			chatroom_num
		from
			ringo_chatroom_link
		where
			user_num = #{user_num}
	</select>
	
	<!-- 
		내가 참여한 채팅방 리스트 가져오기
		* 주의 : 가져오려면 ringo_chatroom_link에서 chatroom_num을 ArrayList<int>로 담아오고,
	 			담아온 ArrayList<int>를 parameter에 넣고 getChatrooms에서 ArrayList<Chatroom>으로 가져오기.
	-->
	<select id="getChatrooms" parameterType="int" resultType="Chatroom">
	    select * from 
	    	ringo_chatroom
	    where 
	    	chatroom_num in
	    	<foreach collection="list" item="chatroom_num" open="(" separator="," close=")">
	        	#{chatroom_num}
	    	</foreach>
	  		order by modifie_date desc
	</select>
	
	<!-- 채팅방의 가장 큰 순 -->
	<select id="getMaxChatroomNum">
	    select
	    	max(chatroom_num) as chatroom_num
	    from 
	    	ringo_chatroom
    </select>
    
    <!-- 유저 고유 번호로 채팅방 링크를 가져옴 -->
    <select id="getChatroomLinksByUserNum" parameterType="int" resultType="ChatroomLink">
    	select
    		*
    	from
    		ringo_chatroom_link
    	where
    		user_num = #{user_num}
    </select>
    
    <!-- 방 고유 번호로 채팅방 링크를 가져옴 -->
    <select id="getChatroomLinksByChatroomNum" parameterType="int" resultType="ChatroomLink">
	   	select
	    	*
	    from
	    	ringo_chatroom_link
	    where
	    	chatroom_num = #{chatroom_num} 
    </select>
    
    <!-- 채팅방 정보를 채팅방 링크로 가져온다. -->
	<select id = "loadChatRooms" parameterType="ChatroomLink" resultType="Chatroom">
		select * from
			ringo_chatroom
		where
			chatroom_num in
			<foreach collection="list" item="chatroom_num" open="(" separator="," close=")">
				#{chatroom_num}
			</foreach>
	</select>
	
	<!-- 채팅방 번호를 가져온다. -->
	<select id="getChatroomById" parameterType="int" resultType="Chatroom">
		select * from
			ringo_chatroom
		where
			chatroom_num = #{chatroom_num}
	</select>
	
	<!-- 채팅방 링크를 유저 고유번호로 가져옴. -->
	<select id="getChatroomLinkByUserNum" parameterType="ChatroomLink" resultType="ChatroomLink">
		select
			*
		from
			ringo_chatroom_link
		where
			user_num = #{user_num}
			and
			chatroom_num = #{chatroom_num}
	</select>
	
	<!-- 해당 채팅방에서 메시지들을 가져온다. -->
	<select id="loadMessageByChatroomNum" parameterType="int" resultType="ChatCommon">
		select
			*
		from
			ringo_chat_common
		where
			chatroom_num = #{chatroom_num}
		order by
			INPUTDATE
	</select>
	
	<!-- 오픈 채팅방들 목록을 가져온다 -->
	<select id="getOpenChatrooms" resultType="Chatroom">
		select
			*
		from
			ringo_chatroom
		where
			gen_category = 'voice'
		order by
			modifie_date desc
	</select>
	
	<!-- 챗커먼의 Chat_num 최대 값을 가져온다 -->
	<select id="getMaxChatNum" resultType="int">
		select
			max(chat_num) as chat_num
		from
			ringo_chat_common
	</select>
	
	<!-- Chat_num의 MAX 값으로 챗커먼을 가져옴(가장 최신순) -->
	<select id="getChatCommonLatest" resultType="ChatCommon">
	SELECT *
		FROM (
				SELECT 
					*
				FROM 
					ringo_chat_common
				ORDER BY 
					INPUTDATE DESC
			)
		WHERE ROWNUM = 1
	</select>
	
	<!-- 채팅방 링크들을 이용해 채팅방들을 가져온다. -->
	<select id="getChatroomsByChatroomLinks" parameterType="ChatroomLink" resultType="Chatroom">
	select * from
		ringo_chatroom
	where
		chatroom_num in
		<foreach collection="list" item="chatroom_num" open="(" separator="," close=")">
			#{chatroom_num}
		</foreach>
	</select>
	
	<!-- 채팅방 목록에 표시할 필요한 데이터들만 가져오기 위한 sql문 -->
	<select id="getChatroomThumbnails" parameterType="int" resultType="net.ringo.ringoSwap.domain.custom.ChatroomThumbnail">
		SELECT 
			rc.chatroom_num,
			rc.title,
			rcc.message,
			TO_CHAR(rcc.inputdate, 'YYYY-MM-DD HH24:MI:SS') as inputdate
		FROM
			ringo_chatroom rc
		JOIN 
			ringo_chat_common rcc 
		ON 
			rc.chatroom_num = rcc.chatroom_num
		WHERE
			rc.chatroom_num IN (
				SELECT chatroom_num FROM ringo_chatroom_link WHERE user_num = #{userNum}
			)
		AND rcc.inputdate = (
				SELECT MAX(inputdate) FROM ringo_chat_common WHERE chatroom_num = rc.chatroom_num
			)
		ORDER BY
			rcc.inputdate DESC
	</select>
</mapper>