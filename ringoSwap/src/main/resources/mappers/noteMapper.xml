<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.ringo.ringoSwap.dao.NoteDAO">
	<!-- 폴더정보를 배열로 리턴하는 select 코드 -->
	<select id="selectUserDirectoryAll" resultType="Directory">
		select * 
		from ringo_directory
		where user_num = #{user_num}
			and parent_dir_num = -1
		order by dir_num
	</select>
	
	<!-- 파일정보를 배열로 리턴하는 select 코드 -->
	<select id="selectUserFileAll" parameterType="java.util.HashMap" resultType="DirFile">
		select *
		from ringo_file
		where user_num = #{user_num}
			<if test="category != 'all'">
				and file_type = #{category}
			</if>
			<if test = "text !='null' ">
				and title like '%'||#{text}||'%'
			</if>
		<if test="sort == 'input'">
			order by file_num
		</if>
		<if test="sort == 'title'">
			order by title desc
		</if>
		<if test="sort == 'modifie'">
			order by modifie_date desc
		</if>
	</select>
	
	<!-- 부모폴더 정보를 기반으로 검색한 폴더정보를 리턴하는 select문 -->
	<select id="selectDirectoryByPDirNum" resultType="Directory">
		select * 
		from ringo_directory
		where parent_dir_num = #{dir_num}
		order by dir_num
	</select>
	
	<!-- 부모폴더 정보를 기반으로 검색한 파일정보를 리턴하는 select문 -->
	<select id="selectFileByDirNum" parameterType="java.util.HashMap" resultType="DirFile">
		select *
		from ringo_file
		where dir_num = #{dir_num}
			<if test="category != 'all'">
				and lang_type = #{category}
			</if>
		<choose>
	        <when test="sort eq 'input'">
	            order by file_num
	        </when>
	        <when test="sort eq 'title'">
	            order by title desc
	        </when>
	        <otherwise>
	            order by modifie_date desc
	        </otherwise>
    	</choose>
	</select>
	
	<!-- file_num을 매개변수로 file객체를 검색해 리턴하는 select문 -->
	<select id="selectFileByFileNum" resultType="DirFile">
	select *
	from ringo_file
	where file_num = #{file_num}
	</select>
	
	<select id="selectWordArrayByFileNum" resultType="DirWord">
	select *
	from ringo_word
	where file_num = #{file_num}
	</select>
	<!-- 출력부 끝 -->
	
	<!-- 생성부 -->
	<!-- 매개변수로 받은 directory객체를 통해 DB에 새로운 directory정보를 생성하는 insert문 -->
	<insert id="dirCreate" parameterType="Directory">
	insert into ringo_directory (dir_num, user_num, dir_name
		<if test="parent_dir_num != -1">
		, parent_dir_num
		</if>
		)
	values(ringo_directory_seq.nextval, #{user_num}, #{dir_name}
		<if test="parent_dir_num != -1">
		, #{parent_dir_num}
		</if>
	)
	</insert>
	<!-- 매개변수로 받은 file객체를 통해 DB에 새로운 file정보를 생성하는 insert문 -->
	<insert id="fileCreateOne" parameterType="DirFile">
	insert into ringo_file(file_num, dir_num, user_num, title, file_type)
	values(ringo_file_seq.nextval, #{dir_num}, #{user_num}, #{title}, #{file_type})
	</insert>

	<!-- 매개변수로 받은 file객체를 통해 DB에 새로운 file정보를 생성하는 insert문 -->
	<insert id="wordCreateOne" parameterType="DirWord">
	insert into ringo_word(word_num, file_num, user_num, word
		<if test="#{pron} != 'null'">
		, pron
		</if>
		, mean)
	values(ringo_word_seq.nextval, #{file_num}, #{user_num}, #{word}
		<if test="pron != 'null'">
		, #{pron}
		</if>
		, #{mean})
	</insert>
</mapper>